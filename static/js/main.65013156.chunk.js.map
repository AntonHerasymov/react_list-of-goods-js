{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","item1","item2","localeCompare","length","reverse","getPreparedGood","isVisibleReset","className","type","cn","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,iBACtBC,EAAc,SAyBb,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAAyBC,EAAzB,GAA4D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACrCI,EAAa,YAAOD,GAE1B,GAAIL,EACF,OAAQA,GACN,KAAKJ,EACHU,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MACF,KAAKZ,EACHS,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAC1D,MACF,QACE,OAAOL,EAQb,OAJIJ,GACFI,EAAcM,UAGTN,EAMcO,CAAgBlB,EACnC,CAAEK,YAAWE,eAETY,EAAiBZ,GAAcF,EAOrC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYjB,IAAcJ,IAG9BsB,QAAS,kBAAMjB,EAAaL,IAR9B,iCAaA,wBACEoB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYjB,IAAcH,IAG9BqB,QAAS,kBAAMjB,EAAaJ,IAR9B,4BAaA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAaf,IAGjBgB,QAAS,kBAAMf,GAAeD,IARhC,qBAaCY,GACD,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WAlDff,GAAc,GACdF,EAAa,KA8CT,sBAaF,6BACGG,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCjHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.65013156.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'alphabetically';\nconst SORT_LENGTH = 'length';\n\nfunction getPreparedGood(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    switch (sortField) {\n      case SORT_ALPHABETICALLY:\n        preparedGoods.sort((item1, item2) => item1.localeCompare(item2));\n        break;\n      case SORT_LENGTH:\n        preparedGoods.sort((item1, item2) => item1.length - item2.length);\n        break;\n      default:\n        return preparedGoods;\n    }\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGood(goodsFromServer,\n    { sortField, isReversed });\n\n  const isVisibleReset = isReversed || sortField;\n\n  const onResetClicked = () => {\n    setIsReversed(false);\n    setSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            {\n              'is-light': sortField !== SORT_ALPHABETICALLY,\n            },\n          )}\n          onClick={() => setSortField(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            {\n              'is-light': sortField !== SORT_LENGTH,\n            },\n          )}\n          onClick={() => setSortField(SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isVisibleReset && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            onResetClicked();\n          }}\n        >\n          Reset\n        </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(item => (\n          <li key={item} data-cy=\"Good\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}